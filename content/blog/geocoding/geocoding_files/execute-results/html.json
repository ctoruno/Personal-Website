{
  "hash": "aefaaca0e43321ef11fb2cb4832d515c",
  "result": {
    "markdown": "---\ntitle: \"Geocoding\"\nformat: html\neditor: visual\nproject:\n  execute-dir: file\n---\n\n\nIn the previous series of posts about Web Scraping, we extracted information about lawyers in Germany and Poland. Within that information, we were able to extract their addresses, which give us a lot of information about their location. Nevertheless, these text strings are just that... text. If we want to take advantage of this kind of information we need to be able to translate this text characters into geographical coordinates. This process of transforming the description of a location into a set of geographical coordinates is called **Geocoding**.\n\nIn this post, I will use information extracted from the [Austrian Bar Association](https://www.rechtsanwaelte.at/) to geocode and visualize the geographical distribution of lawyers across the country using R.\n\n<img src=\"featured.png\" width=\"100%\"/>\n\nThe most practical way to geocode huge volumes of information is to access the data sets of online mapping services like Google Maps or OpenStreetMap through an API. If you want to know more about such services, I would suggest you check the following video:\n\n<iframe width=\"100%\" height=\"325\" src=\"https://www.youtube.com/embed/2IIhGA1cfmc\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen>\n\n</iframe>\n\nLet's first load the libraries that we are going to be using and check the data that we have:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Loading required libraries\nlibrary(tmap)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'tmap' was built under R version 4.1.2\n```\n:::\n\n```{.r .cell-code}\nlibrary(sf)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLinking to GEOS 3.8.1, GDAL 3.2.1, PROJ 7.2.1\n```\n:::\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'tidyverse' was built under R version 4.1.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages\n───────────────────────────────────────\ntidyverse 1.3.2 ──\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n✔ ggplot2 3.3.6     ✔ purrr   0.3.4\n✔ tibble  3.1.8     ✔ dplyr   1.0.9\n✔ tidyr   1.2.0     ✔ stringr 1.4.1\n✔ readr   2.1.2     ✔ forcats 0.5.1\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'ggplot2' was built under R version 4.1.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'tibble' was built under R version 4.1.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'tidyr' was built under R version 4.1.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'readr' was built under R version 4.1.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'dplyr' was built under R version 4.1.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'stringr' was built under R version 4.1.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n```\n:::\n\n```{.r .cell-code}\n# Reading data\naustria_data.df <- read_csv(\"Austria_data.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 6925 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): address, phone, email, website\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\n# How does data look like?\nhead(austria_data.df, 10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 4\n   address                                     phone email website\n   <chr>                                       <chr> <chr> <chr>  \n 1 1010 Wien--Stubenring 18                    Yes   Yes   No     \n 2 5020 Salzburg--Mildenburggasse 1/2          Yes   Yes   No     \n 3 1010 Wien--Stubenring 18                    Yes   Yes   Yes    \n 4 1010 Wien--Stubenring 18                    Yes   Yes   No     \n 5 6900 Bregenz--Rathausstraße 37              Yes   Yes   Yes    \n 6 1010 Wien--Spiegelgasse 19                  Yes   Yes   No     \n 7 1220 Wien--ARES Tower, Donau-City-Straße 11 Yes   Yes   Yes    \n 8 1030 Wien--Riesgasse 3/14                   Yes   Yes   No     \n 9 1010 Wien--Wollzeile 17/22                  Yes   Yes   Yes    \n10 1010 Wien--Wollzeile 17/22                  Yes   Yes   Yes    \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(leaflet)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'leaflet' was built under R version 4.1.2\n```\n:::\n\n```{.r .cell-code}\nleaflet() %>%\n  addTiles() %>%  # Add default OpenStreetMap map tiles\n  addMarkers(lng=174.768, lat=-36.852, popup=\"The birthplace of R\")\n```\n\n::: {.cell-output-display}\n```{=html}\n<div id=\"htmlwidget-5ab1d6346dfdc4ea5d60\" style=\"width:100%;height:464px;\" class=\"leaflet html-widget\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-5ab1d6346dfdc4ea5d60\">{\"x\":{\"options\":{\"crs\":{\"crsClass\":\"L.CRS.EPSG3857\",\"code\":null,\"proj4def\":null,\"projectedBounds\":null,\"options\":{}}},\"calls\":[{\"method\":\"addTiles\",\"args\":[\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",null,null,{\"minZoom\":0,\"maxZoom\":18,\"tileSize\":256,\"subdomains\":\"abc\",\"errorTileUrl\":\"\",\"tms\":false,\"noWrap\":false,\"zoomOffset\":0,\"zoomReverse\":false,\"opacity\":1,\"zIndex\":1,\"detectRetina\":false,\"attribution\":\"&copy; <a href=\\\"https://openstreetmap.org\\\">OpenStreetMap<\\/a> contributors, <a href=\\\"https://creativecommons.org/licenses/by-sa/2.0/\\\">CC-BY-SA<\\/a>\"}]},{\"method\":\"addMarkers\",\"args\":[-36.852,174.768,null,null,null,{\"interactive\":true,\"draggable\":false,\"keyboard\":true,\"title\":\"\",\"alt\":\"\",\"zIndexOffset\":0,\"opacity\":1,\"riseOnHover\":false,\"riseOffset\":250},\"The birthplace of R\",null,null,null,null,{\"interactive\":false,\"permanent\":false,\"direction\":\"auto\",\"opacity\":1,\"offset\":[0,0],\"textsize\":\"10px\",\"textOnly\":false,\"className\":\"\",\"sticky\":true},null]}],\"limits\":{\"lat\":[-36.852,-36.852],\"lng\":[174.768,174.768]}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n",
    "supporting": [
      "geocoding_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"geocoding_files/libs/htmlwidgets-1.5.4/htmlwidgets.js\"></script>\n<script src=\"geocoding_files/libs/jquery-1.12.4/jquery.min.js\"></script>\n<link href=\"geocoding_files/libs/leaflet-1.3.1/leaflet.css\" rel=\"stylesheet\" />\n<script src=\"geocoding_files/libs/leaflet-1.3.1/leaflet.js\"></script>\n<link href=\"geocoding_files/libs/leafletfix-1.0.0/leafletfix.css\" rel=\"stylesheet\" />\n<script src=\"geocoding_files/libs/proj4-2.6.2/proj4.min.js\"></script>\n<script src=\"geocoding_files/libs/Proj4Leaflet-1.0.1/proj4leaflet.js\"></script>\n<link href=\"geocoding_files/libs/rstudio_leaflet-1.3.1/rstudio_leaflet.css\" rel=\"stylesheet\" />\n<script src=\"geocoding_files/libs/leaflet-binding-2.1.1/leaflet.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}